namespace Classes
{
    class Student
    {
        private string lastName;
        private string firstName;
        private string patronymic;
        private DateTime dateOfBirth;
        private string homeAddress;
        private string phoneNumber;
        private List<int> gradesTests = new List<int>();
        private List<int> gradesCourseworks = new List<int>();
        private List<int> gradesExams = new List<int>();

        public Student() : this("Иванов", "Иван") { }

        public Student(string lastName, string firstName) : this(lastName, firstName, "", DateTime.Now, "Косая алея", "09305553344") { }

        public Student(string lastName, string firstName, string patronymic, DateTime dateOfBirth, string homeAddress, string phoneNumber)
        {
            SetLastName(lastName);
            SetFirstName(firstName);
            SetPatronymic(patronymic);
            SetDateOfBirth(dateOfBirth);
            SetHomeAddress(homeAddress);
            SetPhoneNumber(phoneNumber);
            Console.WriteLine("Основной конструктор!");
        }

        public void SetLastName(string lastName)
        {
            this.lastName = lastName;
        }

        public void SetFirstName(string firstName)
        {
            this.firstName = firstName;
        }

        public void SetPatronymic(string patronymic)
        {
            this.patronymic = patronymic;
        }

        public void SetDateOfBirth(DateTime dateOfBirth)
        {
            this.dateOfBirth = dateOfBirth;
        }

        public void SetHomeAddress(string homeAddress)
        {
            if (!string.IsNullOrEmpty(homeAddress))
                this.homeAddress = homeAddress;
        }

        public void SetPhoneNumber(string phoneNumber)
        {
            this.phoneNumber = phoneNumber;
        }

        public string GetLastName()
        {
            return lastName;
        }

        public string GetFirstName()
        {
            return firstName;
        }

        public string GetPatronymic()
        {
            return patronymic;
        }

        public DateTime GetDateOfBirth()
        {
            return dateOfBirth;
        }

        public string GetHomeAddress()
        {
            return homeAddress;
        }

        public string GetPhoneNumber()
        {
            return phoneNumber;
        }

        public List<int> GetGradesTests()
        {
            return gradesTests;
        }

        public List<int> GetGradesCourseworks()
        {
            return gradesCourseworks;
        }

        public List<int> GetGradesExams()
        {
            return gradesExams;
        }

        public virtual void DisplayStudentInfo()
        {
            Console.WriteLine("Student Information:");
            Console.WriteLine("Name: " + lastName + " " + firstName + " " + patronymic);
            Console.WriteLine("Date of Birth: " + dateOfBirth.ToShortDateString());
            Console.WriteLine("Home Address: " + homeAddress);
            Console.WriteLine("Phone Number: " + phoneNumber);
            Console.WriteLine("Grades:");
            Console.WriteLine("Tests:");
            foreach (int grade in gradesTests)
            {
                Console.Write(grade + " ");
            }
            Console.WriteLine();
            Console.WriteLine("Courseworks:");
            foreach (int grade in gradesCourseworks)
            {
                Console.Write(grade + " ");
            }
            Console.WriteLine();
            Console.WriteLine("Exams:");
            foreach (int grade in gradesExams)
            {
                Console.Write(grade + " ");
            }
            Console.WriteLine();
        }

        public void AddTestRate(int rate)
        {
            gradesTests.Add(rate);
        }

        public void AddCourseworkRate(int rate)
        {
            gradesCourseworks.Add(rate);
        }

        public void AddExamRate(int rate)
        {
            gradesExams.Add(rate);
        }

        public virtual void Study()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is studying.");
        }

        public virtual void TakeExam()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is taking an exam.");
        }

        public virtual string GetInfo()
        {
            return "Name: " + lastName + " " + firstName + " " + patronymic + ", Date of Birth: " + dateOfBirth.ToShortDateString() + ", Home Address: " + homeAddress + ", Phone Number: " + phoneNumber;
        }
    }

    class Aspirant : Student
    {
        private string thesisTheme;

        public Aspirant() : base()
        {
            thesisTheme = "Thesis theme not specified";
            Console.WriteLine("Базовый конструктор Аспиранта!");
        }

        public Aspirant(string lastName, string firstName) : base(lastName, firstName)
        {
            thesisTheme = "Thesis theme not specified";
            Console.WriteLine("Конструктор Аспиранта с параметрами имени и фамилии!");
        }

        public Aspirant(string lastName, string firstName, string patronymic, DateTime dateOfBirth, string homeAddress, string phoneNumber, string thesisTheme)
            : base(lastName, firstName, patronymic, dateOfBirth, homeAddress, phoneNumber)
        {
            this.thesisTheme = thesisTheme;
            Console.WriteLine("Основной конструктор!");
        }

        public string ThesisTheme
        {
            get { return thesisTheme; }
            set { thesisTheme = value; }
        }

        public override void Study()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is studying and researching.");
        }

        public void DoInternship()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is doing internship.");
        }

        public void DefendThesis()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is defending thesis.");
        }

        public override void TakeExam()
        {
            Console.WriteLine(GetFirstName() + " " + GetLastName() + " is taking a comprehensive exam.");
        }

        public override string GetInfo()
        {
            string baseInfo = base.GetInfo();
            return baseInfo + ", Thesis Theme: " + thesisTheme;
        }
    }

    class Program
    {
        static void Main()
        {
            Student a = new Student();
            Student b = new Student("Andrew", "Rossi");
            Student c = new Student("Ivanov", "Ivan", "Ivanovich", new DateTime(1977, 5, 25), "Kosalea", "123456789");
            c.AddTestRate(4);
            c.AddCourseworkRate(5);
            c.AddExamRate(3);
            Console.WriteLine("Student:");
            c.DisplayStudentInfo();

            Console.WriteLine();

            Aspirant d = new Aspirant("Petrov", "Petr", "Petrovich", new DateTime(1980, 10, 15), "Arnaytskay street", "987654321", "Quantum Physics");
            d.AddTestRate(5);
            d.AddCourseworkRate(4);
            d.AddExamRate(5);
            d.DoInternship();
            d.DefendThesis();
            Console.WriteLine("Aspirant:");
            d.DisplayStudentInfo();

            Console.WriteLine();
            Console.WriteLine("GetInfo Example:");
            Console.WriteLine(d.GetInfo());
        }
    }
}
